export default {
  globalConfig: {
    bail: 0,
    changedFilesWithAncestor: false,
    collectCoverage: false,
    collectCoverageFrom: [],
    coverageDirectory: '/Users/scalablepath/magic_auth/coverage',
    coverageProvider: 'babel',
    coverageReporters: ['json', 'text', 'lcov', 'clover'],
    detectLeaks: false,
    detectOpenHandles: false,
    errorOnDeprecated: false,
    expand: false,
    findRelatedTests: false,
    forceExit: false,
    json: false,
    lastCommit: false,
    listTests: false,
    logHeapUsage: false,
    maxConcurrency: 5,
    maxWorkers: 2,
    noStackTrace: false,
    nonFlagArgs: ['modules/jestReporter/components/JestReportPage/'],
    notify: false,
    notifyMode: 'failure-change',
    onlyChanged: false,
    onlyFailures: false,
    passWithNoTests: true,
    projects: [],
    reporters: [
      ['default', {}],
      [
        '/Users/scalablepath/magic_auth/modules/jestReporter/customReporter.js',
        {},
      ],
    ],
    rootDir: '/Users/scalablepath/magic_auth',
    runTestsByPath: false,
    skipFilter: false,
    testFailureExitCode: 1,
    testPathPattern: 'modules/jestReporter/components/JestReportPage/',
    testSequencer:
      '/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/@jest/test-sequencer/build/index.js',
    updateSnapshot: 'new',
    useStderr: false,
    verbose: true,
    watch: true,
    watchAll: false,
    watchman: true,
  },
  options: {},
  contexts: {},
  results: {
    numFailedTestSuites: 1,
    numFailedTests: 1,
    numPassedTestSuites: 5,
    numPassedTests: 26,
    numPendingTestSuites: 0,
    numPendingTests: 0,
    numRuntimeErrorTestSuites: 0,
    numTodoTests: 0,
    numTotalTestSuites: 6,
    numTotalTests: 27,
    openHandles: [],
    snapshot: {
      added: 0,
      didUpdate: false,
      failure: false,
      filesAdded: 0,
      filesRemoved: 0,
      filesRemovedList: [],
      filesUnmatched: 0,
      filesUpdated: 0,
      matched: 0,
      total: 0,
      unchecked: 0,
      uncheckedKeysByFile: [],
      unmatched: 0,
      updated: 0,
    },
    startTime: 1649430683697,
    success: false,
    testResults: [
      {
        leaks: false,
        numFailingTests: 0,
        numPassingTests: 1,
        numPendingTests: 0,
        numTodoTests: 0,
        openHandles: [],
        perfStats: {
          end: 1649430685440,
          runtime: 603,
          slow: false,
          start: 1649430684837,
        },
        skipped: false,
        snapshot: {
          added: 0,
          fileDeleted: false,
          matched: 0,
          unchecked: 0,
          uncheckedKeys: [],
          unmatched: 0,
          updated: 0,
        },
        testFilePath:
          '/Users/scalablepath/magic_auth/modules/jestReporter/components/JestReportPage/parseResultsFileData/reduceTestResultNodesIntoTree/mapTestResultIntoNodes/nodesFromName.test.js',
        testResults: [
          {
            ancestorTitles: [],
            duration: 3,
            failureDetails: [],
            failureMessages: [],
            fullName: 'should create nested node names',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should create nested node names',
          },
        ],
        failureMessage: null,
      },
      {
        leaks: false,
        numFailingTests: 1,
        numPassingTests: 0,
        numPendingTests: 0,
        numTodoTests: 0,
        openHandles: [],
        perfStats: {
          end: 1649430685561,
          runtime: 724,
          slow: false,
          start: 1649430684837,
        },
        skipped: false,
        snapshot: {
          added: 0,
          fileDeleted: false,
          matched: 0,
          unchecked: 0,
          uncheckedKeys: [],
          unmatched: 0,
          updated: 0,
        },
        testFilePath:
          '/Users/scalablepath/magic_auth/modules/jestReporter/components/JestReportPage/parseResultsFileData/parseResultsFileData.test.js',
        testResults: [
          {
            ancestorTitles: [],
            duration: 98,
            failureDetails: [
              {
                matcherResult: {
                  actual: 'bola',
                  expected: 'dude',
                  message:
                    '\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m"dude"\u001b[39m\nReceived: \u001b[31m"bola"\u001b[39m',
                  name: 'toBe',
                  pass: false,
                },
              },
            ],
            failureMessages: [
              'Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m"dude"\u001b[39m\nReceived: \u001b[31m"bola"\u001b[39m\n    at Object.<anonymous> (/Users/scalablepath/magic_auth/modules/jestReporter/components/JestReportPage/parseResultsFileData/parseResultsFileData.test.js:11:20)\n    at Promise.then.completed (/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:391:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/jest-circus/build/utils.js:316:10)\n    at _callCircusTest (/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/jest-circus/build/run.js:218:40)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n    at _runTest (/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/jest-circus/build/run.js:155:3)\n    at _runTestsForDescribeBlock (/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/jest-circus/build/run.js:66:9)\n    at run (/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)\n    at jestAdapter (/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)\n    at runTestInternal (/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:389:16)\n    at runTest (/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/jest-runner/build/runTest.js:475:34)\n    at Object.worker (/Users/scalablepath/.nvm/versions/node/v14.18.2/lib/node_modules/jest/node_modules/jest-runner/build/testWorker.js:133:12)',
            ],
            fullName: 'should nest jest results',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'failed',
            title: 'should nest jest results',
          },
        ],
        failureMessage:
          '\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mshould nest jest results\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m"dude"\u001b[39m\n    Received: \u001b[31m"bola"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mmodules/jestReporter/components/JestReportPage/parseResultsFileData/parseResultsFileData.test.js\u001b[39m\u001b[0m\u001b[2m:11:20)\u001b[22m\u001b[2m\u001b[22m\n',
      },
      {
        leaks: false,
        numFailingTests: 0,
        numPassingTests: 1,
        numPendingTests: 0,
        numTodoTests: 0,
        openHandles: [],
        perfStats: {
          end: 1649430685709,
          runtime: 215,
          slow: false,
          start: 1649430685494,
        },
        skipped: false,
        snapshot: {
          added: 0,
          fileDeleted: false,
          matched: 0,
          unchecked: 0,
          uncheckedKeys: [],
          unmatched: 0,
          updated: 0,
        },
        testFilePath:
          '/Users/scalablepath/magic_auth/modules/jestReporter/components/JestReportPage/parseResultsFileData/reduceTestResultNodesIntoTree/reduceTestResultNodesIntoTree.test.js',
        testResults: [
          {
            ancestorTitles: ['reducer'],
            duration: 1,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer should reduce the test result nodes into a node tree',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should reduce the test result nodes into a node tree',
          },
        ],
        failureMessage: null,
      },
      {
        leaks: false,
        numFailingTests: 0,
        numPassingTests: 19,
        numPendingTests: 0,
        numTodoTests: 0,
        openHandles: [],
        perfStats: {
          end: 1649430685795,
          runtime: 207,
          slow: false,
          start: 1649430685588,
        },
        skipped: false,
        snapshot: {
          added: 0,
          fileDeleted: false,
          matched: 0,
          unchecked: 0,
          uncheckedKeys: [],
          unmatched: 0,
          updated: 0,
        },
        testFilePath:
          '/Users/scalablepath/magic_auth/modules/jestReporter/components/JestReportPage/parseResultsFileData/reduceTestResultNodesIntoTree/reducer.test.js',
        testResults: [
          {
            ancestorTitles: [
              'reducer',
              'reduce the first test result into the node tree',
              'first iteration',
            ],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the first test result into the node tree first iteration should create one first level node',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should create one first level node',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the first test result into the node tree',
              'first iteration',
            ],
            duration: 1,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the first test result into the node tree first iteration should create the correct node structure',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should create the correct node structure',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the first test result into the node tree',
              'second iteration',
            ],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the first test result into the node tree second iteration should not alter the passed tree (immutability)',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should not alter the passed tree (immutability)',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the first test result into the node tree',
              'second iteration',
            ],
            duration: 1,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the first test result into the node tree second iteration should create one nested second level node',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should create one nested second level node',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the first test result into the node tree',
              'second iteration',
            ],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the first test result into the node tree second iteration create the correct node structure',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'create the correct node structure',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the first test result into the node tree',
              'third iteration',
            ],
            duration: 1,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the first test result into the node tree third iteration should not alter the passed tree (immutability)',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should not alter the passed tree (immutability)',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the first test result into the node tree',
              'third iteration',
            ],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the first test result into the node tree third iteration creates a nested node',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'creates a nested node',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the first test result into the node tree',
              'third iteration',
            ],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the first test result into the node tree third iteration create the correct node structure',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'create the correct node structure',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the first test result into the node tree',
              'fourth iteration',
            ],
            duration: 1,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the first test result into the node tree fourth iteration should not alter the passed tree',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should not alter the passed tree',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the first test result into the node tree',
              'fourth iteration',
            ],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the first test result into the node tree fourth iteration creates a nested node',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'creates a nested node',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the first test result into the node tree',
              'fourth iteration',
            ],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the first test result into the node tree fourth iteration create the correct node structure',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'create the correct node structure',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the second test result into the node tree',
              'first iteration',
            ],
            duration: 1,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the second test result into the node tree first iteration should keep one first level node',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should keep one first level node',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the second test result into the node tree',
              'first iteration',
            ],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the second test result into the node tree first iteration should create the correct node structure (no changes)',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should create the correct node structure (no changes)',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the second test result into the node tree',
              'second iteration',
            ],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the second test result into the node tree second iteration should create another second level node',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should create another second level node',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the second test result into the node tree',
              'second iteration',
            ],
            duration: 1,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the second test result into the node tree second iteration should create the correct node structure',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should create the correct node structure',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the second test result into the node tree',
              'third iteration',
            ],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the second test result into the node tree third iteration should create another third level node',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should create another third level node',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the second test result into the node tree',
              'third iteration',
            ],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the second test result into the node tree third iteration should create the correct node structure',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should create the correct node structure',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the second test result into the node tree',
              'fourth iteration',
            ],
            duration: 4,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the second test result into the node tree fourth iteration should create another fourth level node',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should create another fourth level node',
          },
          {
            ancestorTitles: [
              'reducer',
              'reduce the second test result into the node tree',
              'fourth iteration',
            ],
            duration: 1,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'reducer reduce the second test result into the node tree fourth iteration should create the correct node structure',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should create the correct node structure',
          },
        ],
        failureMessage: null,
      },
      {
        leaks: false,
        numFailingTests: 0,
        numPassingTests: 2,
        numPendingTests: 0,
        numTodoTests: 0,
        openHandles: [],
        perfStats: {
          end: 1649430685938,
          runtime: 200,
          slow: false,
          start: 1649430685738,
        },
        skipped: false,
        snapshot: {
          added: 0,
          fileDeleted: false,
          matched: 0,
          unchecked: 0,
          uncheckedKeys: [],
          unmatched: 0,
          updated: 0,
        },
        testFilePath:
          '/Users/scalablepath/magic_auth/modules/jestReporter/components/JestReportPage/parseResultsFileData/reduceTestResultNodesIntoTree/mapTestResultIntoNodes/mapTestResultsIntoNodes.test.js',
        testResults: [
          {
            ancestorTitles: [],
            duration: 1,
            failureDetails: [],
            failureMessages: [],
            fullName: 'map test results into multiple nodes',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'map test results into multiple nodes',
          },
          {
            ancestorTitles: [],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName: 'map second test results into multiple nodes',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'map second test results into multiple nodes',
          },
        ],
        failureMessage: null,
      },
      {
        leaks: false,
        numFailingTests: 0,
        numPassingTests: 3,
        numPendingTests: 0,
        numTodoTests: 0,
        openHandles: [],
        perfStats: {
          end: 1649430686021,
          runtime: 150,
          slow: false,
          start: 1649430685871,
        },
        skipped: false,
        snapshot: {
          added: 0,
          fileDeleted: false,
          matched: 0,
          unchecked: 0,
          uncheckedKeys: [],
          unmatched: 0,
          updated: 0,
        },
        testFilePath:
          '/Users/scalablepath/magic_auth/modules/jestReporter/components/JestReportPage/parseResultsFileData/mapTestResult/mapTestResult.test.js',
        testResults: [
          {
            ancestorTitles: ['mapTestResult'],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName: 'mapTestResult should map into 4 tests',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title: 'should map into 4 tests',
          },
          {
            ancestorTitles: ['mapTestResult'],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'mapTestResult should clean file path, removing root dir and map other props',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title:
              'should clean file path, removing root dir and map other props',
          },
          {
            ancestorTitles: ['mapTestResult'],
            duration: 0,
            failureDetails: [],
            failureMessages: [],
            fullName:
              'mapTestResult should clean file path, removing root dir and map other props of second test',
            invocations: 1,
            location: null,
            numPassingAsserts: 0,
            status: 'passed',
            title:
              'should clean file path, removing root dir and map other props of second test',
          },
        ],
        failureMessage: null,
      },
    ],
    wasInterrupted: false,
  },
};
